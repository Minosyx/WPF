<Window x:Class="TasksMVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TasksMVVM"
        xmlns:vm="clr-namespace:TasksMVVM.ViewModel"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:wpfUtils="clr-namespace:JacekMatulewski.WpfUtils;assembly=JacekMatulewski.WpfUtils"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="900">
    <Window.DataContext>
        <vm:Tasks></vm:Tasks>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="btStyle" TargetType="Button">
            <Setter Property="FontSize" Value="10"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Width" Value="85"></Setter>
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Text="{Binding Path=SelectedDate, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL, RelativeSource={RelativeSource AncestorType=DatePicker}}"></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="b2v"></BooleanToVisibilityConverter>
        <local:BoolToBrushConverter x:Key="b2bFinished"></local:BoolToBrushConverter>
        <local:BoolToBrushConverter x:Key="b2bAfterETA" FalseColor="Green" TrueColor="Red"></local:BoolToBrushConverter>
        <local:TaskConverter x:Key="task"></local:TaskConverter>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Save}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <TextBlock Margin="10, 10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Liczba zadań: ">
            <Run Text="{Binding TaskList.Count, Mode=OneWay}"></Run>
        </TextBlock>
        <ListBox x:Name="lbListaZadan" Margin="10, 35,10,200" ItemsSource="{Binding TaskList}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="3">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Desc, Mode=OneWay}" FontSize="20" Foreground="{Binding Finished, Mode=OneWay, Converter={StaticResource b2bFinished}}"></TextBlock>
                            <Button Content="Zrealizowane" Command="{Binding MarkFinished}" Style="{StaticResource btStyle}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource b2v}}"></Button>
                            <Button Content="Niezrealizowane" Command="{Binding MarkUnfinished}" Style="{StaticResource btStyle}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource b2v}}"></Button>
                        </StackPanel>
                        <TextBlock>
                            Termin: <Run Text="{Binding ETA, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}" Foreground="{Binding UnfinishedAfterETA, Mode=OneWay, Converter={StaticResource b2bAfterETA}}"></Run>
                            Utworzone: <Run Text="{Binding Created, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}"></Run>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="3"></Setter>
                    <Setter Property="BorderBrush" Value="Black"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <wpfUtils:NotificationDialogBox x:Name="NotificationDialogBox1" Caption="Zagnieżdzenie" CommandBefore="{Binding DeleteTask}" CommandParameter="{Binding ElementName=lbListaZadan, Path=SelectedIndex}"></wpfUtils:NotificationDialogBox>
        <wpfUtils:ConditionalMessageDialogBox x:Name="questionYesNo" Caption="Pytanie" Icon="Question" Buttons="YesNo"
                                              CommandYes="{Binding ElementName=NotificationDialogBox1, Path=Show}" CommandParameter="Zadanie zostało usunięte" IsDialogBypassed="{Binding ElementName=lbListaZadan, Path=SelectedValue.Finished}"
                                              DialogBypassButton="Yes"></wpfUtils:ConditionalMessageDialogBox>
        <Button Content="Usuń zadanie" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,165" Width="100" Height="25" Style="{StaticResource btStyle}" Command="{Binding ElementName=questionYesNo, Path=Show}" CommandParameter="Czy jesteś pewien, że chcesz usunąć niezrealizowane zadanie?"></Button>
        <!--<Button Content="Usuń zadanie" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,165" Width="100" Height="25" Style="{StaticResource btStyle}" Command="{Binding DeleteTask}" CommandParameter="{Binding ElementName=lbListaZadan, Path=SelectedIndex}"></Button>-->
        <Button Content="O..." HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="395,0,10,165" Width="60" Height="25" Style="{StaticResource btStyle}"
                Command="{Binding ElementName=SimpleMessageDialogBox, Path=Show}" CommandParameter="Zadania WPF&#x0a;(c) UMK 2021"></Button>
        <wpfUtils:SimpleMessageDialogBox x:Name="SimpleMessageDialogBox" Caption="Informacje"></wpfUtils:SimpleMessageDialogBox>
        <GroupBox Header="Nowe zadanie" Margin="10,0,10,10" MinWidth="420" Height="140" VerticalAlignment="Bottom">
            <Grid>
                <Label Content="Opis:" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                <TextBox x:Name="tbOpis" Height="23" Margin="10,30,10,0" VerticalAlignment="Top"></TextBox>
                <Label Content="Priorytet:" Margin="10,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                <ComboBox x:Name="cbPriorytet" Margin="10,85,0,0" Width="120" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <ComboBoxItem>Mniej ważne</ComboBoxItem>
                    <ComboBoxItem IsSelected="True">Ważne</ComboBoxItem>
                    <ComboBoxItem>Krytyczne</ComboBoxItem>
                </ComboBox>
                <Label Content="Termin realizacji:" Margin="160,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
                <wpfUtils:NotificationDialogBox x:Name="NotificationDialogBox" Caption="Zadania" CommandBefore="{Binding AddTask}">
                    <wpfUtils:NotificationDialogBox.CommandParameter>
                        <MultiBinding Converter="{StaticResource task}">
                            <Binding ElementName="tbOpis" Path="Text"></Binding>
                            <Binding ElementName="dpTerminRealizacji" Path="SelectedDate"></Binding>
                            <Binding ElementName="cbPriorytet" Path="SelectedIndex"></Binding>
                        </MultiBinding>
                    </wpfUtils:NotificationDialogBox.CommandParameter>
                </wpfUtils:NotificationDialogBox>
                <DatePicker x:Name="dpTerminRealizacji" Margin="160, 85,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" SelectedDate="{x:Static s:DateTime.Now}"></DatePicker>
                <!--<Button Content="Dodaj zadanie" Margin="0,83,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="100" Height="25" Style="{StaticResource btStyle}" Command="{Binding AddTask}">-->
                 <Button Content="Dodaj zadanie" Margin="0,83,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="100" Height="25" Style="{StaticResource btStyle}" Command="{Binding ElementName=NotificationDialogBox, Path=Show}" CommandParameter="Zadanie zostało dodane">
                    <!--<Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource task}">
                            <Binding ElementName="tbOpis" Path="Text"></Binding>
                            <Binding ElementName="dpTerminRealizacji" Path="SelectedDate"></Binding>
                            <Binding ElementName="cbPriorytet" Path="SelectedIndex"></Binding>
                        </MultiBinding>
                    </Button.CommandParameter>-->
                </Button>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
